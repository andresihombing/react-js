{"version":3,"sources":["component/network/request.js","component/config/uri.js","component/network/resource.js","App.js","negara.js","users.js","contact.js","index.js"],"names":["url","header","fetch","method","headers","then","response","json","responseJson","data","catch","error","body","Request","get","URI","res","Promise","resolve","reject","err","negara","App","componentDidMount","a","getData","Resource","global","lUpdate","lastUpdate","date","Date","setState","confirmed","value","recovered","deaths","toLocaleString","console","log","message","handleInputChange","search","onSubmit","props","history","push","pathname","state","detail","className","class","type","placeholder","ref","input","onChange","this","onClick","React","Component","Negara","getDataIndo","location","countries","alert","provinsi","map","kasusPosi","kasusMeni","kasusSemb","colspan","Contact","routing","exact","path","component","Users","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6d330dbe.chunk.js","sourcesContent":["class Request{\n    async get(url, header = {}){\n      let data = await fetch(url, {\n        method: 'GET',\n        headers: header,\n      })\n      .then((response) => response.json())\n      .then(responseJson => {\n        return {data: responseJson};\n      }).catch((error) =>{\n        return {error}\n      })\n  \n      return data;\n    }\n  \n    async post(url, header = {}, body = {}){\n      let data = await fetch(url, {\n        method: 'POST',\n        headers: header,\n        body: body,\n      })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        return {responseJson};\n      }).catch((error) => {\n        return {error}\n      });\n  \n      return data;\n    }\n    \n    async put(url, header = {}, body = {}){\n      let data = await fetch(url, {\n        method: 'PUT',\n        headers: header,\n        body: body,\n      })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        return {responseJson};\n      }).catch((error) => {\n        return {error}\n      });\n  \n      return data;\n    }\n    \n    async delete(url, header = {}){\n      let data = await fetch(url, {\n        method: 'DELETE',\n        headers: header\n      })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        return {responseJson};\n      }).catch((error) => {\n        return {error}\n      });\n  \n      return data;\n    }\n  }\n  \n  export default new Request();","export default {    \n    API_BASE_URL: \"https://covid19.mathdro.id\",\n    API_BASE_URL_INDO: \"https://indonesia-covid19.mathdro.id\",\n\n    global: '/api',\n    countries: '/api/countries/',\n    provinsi : '/api/provinsi'\n    \n}","import Request from \"./request\";\nimport URI from \"../config/uri\"\n\nclass Resource {\n    async global(){\n      const header = {          \n        \"Content-Type\": \"application/json\",\n      }\n  \n      let res = await Request.get(URI.API_BASE_URL + URI.global);\n      \n      return new Promise((resolve, reject) => {\n        try{\n          resolve(res.data)\n        } catch (err) {\n          reject(\"An error occurred\")\n        }\n      });\n    }\n\n    async countries(negara){\n      const header = {          \n        \"Content-Type\": \"application/json\",\n      }\n  \n      let res = await Request.get(URI.API_BASE_URL + URI.countries + negara);\n      \n      return new Promise((resolve, reject) => {\n        try{\n          resolve(res.data)\n        } catch (err) {\n          reject(\"An error occurred\")\n        }\n      });\n    }\n\n    async provinsi(){\n      const header = {          \n        \"Content-Type\": \"application/json\",\n      }\n  \n      let res = await Request.get(URI.API_BASE_URL_INDO + URI.provinsi);\n      \n      return new Promise((resolve, reject) => {\n        try{\n          resolve(res.data)\n        } catch (err) {\n          reject(\"An error occurred\")\n        }\n      });\n    }\n}\n\nexport default new Resource();","import React from 'react';\n// import logo from './logo.svg';\n// import './App.css';\nimport Resource from './component/network/resource'\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = { \n      confirmed : '',\n      recovered : '',\n      deaths : '',\n      lastUpdate : '',\n      search : ''\n\n    }\n  }\n\n  componentDidMount = async () => {    \n    this.getData();                  \n  }  \n\n  getData = async () => {\n    try{                    \n        Resource.global()        \n          .then((res) => {                                 \n            var lUpdate = res.lastUpdate\n            var date = new Date(lUpdate)            \n            this.setState({\n              confirmed : res.confirmed.value,\n              recovered: res.recovered.value,\n              deaths : res.deaths.value,\n              lastUpdate: date.toLocaleString(\"en-US\")\n            })\n          })\n          .catch((err) => {                                                                                          \n              console.log(err)\n          })        \n    } catch (error) {            \n        console.log(error)\n        console.log('AsyncStorage error: ' + error.message);\n    }\n  }  \n  \n  \n  handleInputChange = () => {\n    this.setState({\n      search: this.search.value\n    })\n  }\n\n  onSubmit = () => {\n    // this.props.history.push('/negara')\n    this.props.history.push({\n      pathname: '/negara',\n      search: `?=${this.state.search}`,\n      state: { detail: this.state.search }\n    })\n  }\n\n  render(){    \n    return (\n      <div className=\"App\">      \n        <header className=\"App-header\">        \n          <div class = \"container\">            \n            <form class = \"example\">        \n              <input\n                type = \"text\"\n                placeholder=\"Pencarian berdasarkan negara...\"\n                ref={input => this.search = input}\n                onChange={this.handleInputChange}\n              />\n              <button \n              type=\"submit\"\n              onClick={this.onSubmit}\n              ><i class=\"fa fa-search\"></i></button>\n            </form>\n            <div class = \"row\">\n              {/* <div class = \"col-md-6\"> */}\n              <div class = 'pull-left'>\n                <h2>Kasus Global</h2>\n              </div>\n              <div class = 'pull-right'>\n              <h5>Terakhir diupdate : {this.state.lastUpdate}</h5>\n              </div>\n              {/* </div> */}\n            </div>          \n          \n            <div class = \"col-md-4\">\n              <div class=\"panel panel-warning\">\n                <div class=\"panel-heading\">\n                  <h4>Terkonfirmasi</h4>\n                </div>\n                <div class=\"panel-heading\">{this.state.confirmed}</div>\n              </div>\n            </div>\n            <div class = \"col-md-4\">\n              <div class=\"panel panel-success\">\n              < div class=\"panel-heading\">\n                  <h4>Sembuh</h4>\n                </div>\n                <div class=\"panel-heading\">{this.state.recovered}</div>\n              </div>\n            </div>\n            <div class = \"col-md-4\">\n              <div class=\"panel panel-danger\">\n                <div class=\"panel-heading\">\n                  <h4>Meninggal</h4>\n                </div>\n                <div class=\"panel-heading\">{this.state.deaths}</div>\n              </div>\n            </div>          \n          </div>\n        </header>\n      </div>\n    )\n  }\n}\n\nexport default App;\n\n","import React from 'react'\nimport Resource from './component/network/resource'\nimport './App.css';\nclass Negara extends React.Component {\n  constructor() {\n    super();\n    this.state = { \n      confirmed : '',\n      recovered : '',\n      deaths : '',\n      lastUpdate : '',\n      negara : '',\n      data : []\n\n    }\n  }\n\n  componentDidMount = async () => {            \n    this.getData()\n    this.getDataIndo()\n  }  \n\n  getData = async () => {     \n    var data = this.props.location.state.detail    \n    try{                    \n        Resource.countries(data)        \n          .then((res) => {                                           \n            var lUpdate = res.lastUpdate\n            var date = new Date(lUpdate)            \n            this.setState({\n              confirmed : res.confirmed.value,\n              recovered: res.recovered.value,\n              deaths : res.deaths.value,\n              lastUpdate: date.toLocaleString(\"en-US\")\n            })\n          })\n          .catch((err) => {                                                                                          \n              console.log(err)\n              this.props.history.push('/')\n              alert('Data pencarian tidak di temukan')\n          })        \n    } catch (error) {            \n        console.log(error)\n        console.log('AsyncStorage error: ' + error.message);\n    }\n  }\n\n  getDataIndo = async () => {\n    try{                    \n        Resource.provinsi()        \n          .then((res) => {                                 \n            console.log(res.data)\n            this.setState({\n              data : res.data\n            })            \n          })\n          .catch((err) => {                                                                                          \n              console.log(err)\n          })        \n    } catch (error) {            \n        console.log(error)\n        console.log('AsyncStorage error: ' + error.message);\n    }\n  }\n\n  render() {    \n    return(\n      <div className=\"App\">      \n        <header className=\"Header-negara\">        \n          <div class = \"container\">            \n            <div class = \"row\">\n              {/* <div class = \"col-md-6\"> */}\n              <div class = 'pull-left'>\n                <h2>Kasus {this.props.location.state.detail}</h2>\n              </div>\n              <div class = 'pull-right'>\n              <h5>Terakhir diupdate : {this.state.lastUpdate}</h5>\n              </div>\n              {/* </div> */}\n            </div>          \n          \n            <div class = \"col-md-4\">\n              <div class=\"panel panel-warning\">\n                <div class=\"panel-heading\">\n                  <h4>Terkonfirmasi</h4>\n                </div>\n                <div class=\"panel-heading\">{this.state.confirmed}</div>\n              </div>\n            </div>\n            <div class = \"col-md-4\">\n              <div class=\"panel panel-success\">\n              < div class=\"panel-heading\">\n                  <h4>Sembuh</h4>\n                </div>\n                <div class=\"panel-heading\">{this.state.recovered}</div>\n              </div>\n            </div>\n            <div class = \"col-md-4\">\n              <div class=\"panel panel-danger\">\n                <div class=\"panel-heading\">\n                  <h4>Meninggal</h4>\n                </div>\n                <div class=\"panel-heading\">{this.state.deaths}</div>\n              </div>\n            </div>          \n          </div>          \n        </header>\n        <div class = \"container\">\n          <table class=\"table\">\n              <thead>\n                <tr class = \"active\">\n                  <td><b>Provinsi</b></td>\n                  <td><b>Terkonfirmasi</b></td>\n                  <td><b>Sembuh</b></td>\n                  <td><b>Meninggal</b></td>\n                </tr>\n              </thead>\n              <tbody>                     \n                  {\n                    this.props.location.state.detail == 'indonesia' ?\n                    this.state.data.map(data => {\n                        return (\n                          <tr>\n                              <td  class=\"info\">{data.provinsi}</td>\n                              <td class=\"warning\"><span className=\"badge badge-primary\">{data.kasusPosi}</span></td>\n                              <td class=\"success\"><span className=\"badge badge-danger\">{data.kasusMeni}</span></td> \n                              <td class=\"danger\"><span className=\"badge badge-success\">{data.kasusSemb}</span></td>\n                          </tr>\n                        )\n                    }) :\n                    <tr>\n                      <td colspan=\"4\">\n                        Tidak mendapatkan data\n                      </td>\n                    </tr>\n                  } \n              </tbody>\n            </table>\n          </div>\n      </div>\n    )\n  }\n}\nexport default Negara","import React from 'react'\nclass Contact extends React.Component {\n  onSubmit = () => {\n    this.props.history.push('/negara')\n  }\n  render() {\n    return (\n      <form>\n        <input placeholder=\"name\" type=\"name\" />\n        <input placeholder=\"email\" type=\"email\" />\n        <button onClick={this.onSubmit}>Submit</button>\n      </form>\n    )\n  }\n}\nexport default Contact","import React from 'react'\nclass Contact extends React.Component {\n  render() {\n    return <h1>Contact</h1>\n  }\n}\nexport default Contact","// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { Route, Link, BrowserRouter as Router } from 'react-router-dom'\nimport App from './App'\nimport Negara from './negara'\nimport Contact from './contact'\nimport Users from './users'\nconst routing = (\n  <Router>\n    <div>\n      {/* <ul>\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/users\">Users</Link>\n        </li>\n        <li>\n          <Link to=\"/contact\">Contact</Link>\n        </li>\n      </ul>\n      <hr /> */}\n        <Route exact path=\"/covid-19\" component={App} />\n        <Route exact path=\"/negara\" component={Negara} />\n        <Route path=\"/users\" component={Users} />\n    </div>\n  </Router>\n)\nReactDOM.render(routing, document.getElementById('root'))"],"sourceRoot":""}